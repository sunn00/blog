(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{601:function(t,i,a){"use strict";a.r(i);var v=a(9),_=Object(v.a)({},(function(){var t=this,i=t.$createElement,a=t._self._c||i;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h4",{attrs:{id:"git版本控制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git版本控制"}},[t._v("#")]),t._v(" Git版本控制")]),t._v(" "),a("hr"),t._v(" "),a("h5",{attrs:{id:"产品级分支模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#产品级分支模型"}},[t._v("#")]),t._v(" 产品级分支模型")]),t._v(" "),a("p",[t._v("常驻分支(一旦创建不会更改)：")]),t._v(" "),a("p",[t._v("development                    -- 从master分支创建")]),t._v(" "),a("p",[t._v("production(master)         -- 默认分支")]),t._v(" "),a("p",[t._v("活动分支(随需求一直更改)：")]),t._v(" "),a("p",[t._v("feature                               -- 特性分支，从development创建")]),t._v(" "),a("p",[t._v("hotfix                                  -- 热修复分支，从master创建")]),t._v(" "),a("p",[t._v("release                                -- 预发布分支，从development创建")]),t._v(" "),a("h4",{attrs:{id:"git命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git命令"}},[t._v("#")]),t._v(" GIT命令")]),t._v(" "),a("hr"),t._v(" "),a("h5",{attrs:{id:"基本操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本操作"}},[t._v("#")]),t._v(" 基本操作")]),t._v(" "),a("h6",{attrs:{id:"git-help"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-help"}},[t._v("#")]),t._v(" git help")]),t._v(" "),a("p",[t._v("帮助文档")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("git help "),a("commond")],1)]),t._v(" "),a("li",[a("p",[t._v("git "),a("commond",[t._v(" -h")])],1)])]),t._v(" "),a("h6",{attrs:{id:"git-config"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-config"}},[t._v("#")]),t._v(" git config")]),t._v(" "),a("p",[t._v("用户配置")]),t._v(" "),a("ul",[a("li",[a("p",[t._v('git config -- global user.name "xxxxx"')])]),t._v(" "),a("li",[a("p",[t._v('git config -- global user.email "xxxxx"')])]),t._v(" "),a("li",[a("p",[t._v("git config --list：查看已有的配置信息")])])]),t._v(" "),a("p",[t._v("三个配置级别：")]),t._v(" "),a("ol",[a("li",[t._v("--local 【默认，高优先级】：只影响本仓库      .git/config")]),t._v(" "),a("li",[t._v("--global 【中优先级】：影响到所有当前用户的git仓库     ~/.gitconfig")]),t._v(" "),a("li",[t._v("--system 【低优先级】： 影响到全系统的git仓库     /etc/gitconfig")])]),t._v(" "),a("h6",{attrs:{id:"git-init"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-init"}},[t._v("#")]),t._v(" git init")]),t._v(" "),a("p",[t._v("初始化仓库")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("git init [path]")])]),t._v(" "),a("li",[a("p",[t._v("git init [path] --bare")])])]),t._v(" "),a("h6",{attrs:{id:"git-status"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-status"}},[t._v("#")]),t._v(" git status")]),t._v(" "),a("p",[t._v("找出工作区间的状态区别")]),t._v(" "),a("p",[t._v("未跟踪       <->      跟踪           ：文件状态")]),t._v(" "),a("p",[t._v("工作目录   <->      暂存区       ：内容状态")]),t._v(" "),a("p",[t._v("暂存区       <->      最新提交   ：内容状态")]),t._v(" "),a("h6",{attrs:{id:"git-add-path"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-add-path"}},[t._v("#")]),t._v(" git add [path]")]),t._v(" "),a("p",[t._v("添加文件内容到"),a("strong",[t._v("暂存区")]),t._v("（同时文件被跟踪）")]),t._v(" "),a("h6",{attrs:{id:"gitignore"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gitignore"}},[t._v("#")]),t._v(" .gitignore")]),t._v(" "),a("p",[t._v("忽略文件")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("在添加时忽略匹配的文件")])]),t._v(" "),a("li",[a("p",[t._v("仅作用于"),a("strong",[t._v("未追踪的文件")])])])]),t._v(" "),a("h6",{attrs:{id:"git-rm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-rm"}},[t._v("#")]),t._v(" git -rm")]),t._v(" "),a("p",[t._v("从暂存区删除")]),t._v(" "),a("ul",[a("li",[t._v("仅从暂存区删除：\tgit rm --cached")]),t._v(" "),a("li",[t._v("从暂存区与工作目录删除：\tgit rm")]),t._v(" "),a("li",[t._v("删除所有被跟踪，但是在工作目录被删除的文件：\tgit rm $(git ls-files --deleted)")])]),t._v(" "),a("h6",{attrs:{id:"git-commit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-commit"}},[t._v("#")]),t._v(" git commit")]),t._v(" "),a("p",[t._v("根据暂存区内容创建一个提交记录")]),t._v(" "),a("ul",[a("li",[t._v("git commit -m 'xxxxx' ： 对提交内容进行注释")]),t._v(" "),a("li",[t._v("git commit -a -m 'xxxxx'：将工作目录的内容直接提交到提交区，相当于 git add . ，git commit -m 'xxxx'")])]),t._v(" "),a("h6",{attrs:{id:"git-log"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-log"}},[t._v("#")]),t._v(" git log")]),t._v(" "),a("p",[t._v("显示提交历史信息")]),t._v(" "),a("p",[t._v("消息类型：")]),t._v(" "),a("p",[t._v("commit: 【SHA-1编码的HASH标示符】")]),t._v(" "),a("p",[t._v("Author: 【git -config 配置的提交者信息】")]),t._v(" "),a("p",[t._v("Date: 【日期信息】")]),t._v(" "),a("p",[t._v("【commit注释信息】")]),t._v(" "),a("ul",[a("li",[t._v("git log --oneline：    只展示7位hash编码与注释")]),t._v(" "),a("li",[t._v("git log --color --graph")])]),t._v(" "),a("h6",{attrs:{id:"git-alias"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-alias"}},[t._v("#")]),t._v(" git alias")]),t._v(" "),a("p",[t._v("别名命令")]),t._v(" "),a("p",[t._v("git config alias.shortname "),a("fullcommand")],1),t._v(" "),a("p",[t._v("常用别名配置：")]),t._v(" "),a("ul",[a("li",[t._v("co = checkout")]),t._v(" "),a("li",[t._v("rmd = git rm $(git ls-files --deleted)")]),t._v(" "),a("li",[t._v("po = push")]),t._v(" "),a("li",[t._v("ci = commit")])]),t._v(" "),a("h6",{attrs:{id:"git-diff"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-diff"}},[t._v("#")]),t._v(" git diff")]),t._v(" "),a("p",[t._v("显示不同版本差异")]),t._v(" "),a("ul",[a("li",[t._v("git diff：    工作目录与暂存区的差异")]),t._v(" "),a("li",[t._v("git diff -cached ["),a("reference",[t._v("]：   暂存区与某次提交差异，默认为HEAD")])],1),t._v(" "),a("li",[t._v("git diff"),a("reference",[t._v("：   工作目录与某次提交的差异")])],1)]),t._v(" "),a("h6",{attrs:{id:"git-checkout-git-reset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-checkout-git-reset"}},[t._v("#")]),t._v(" git checkout & git reset")]),t._v(" "),a("p",[t._v("撤销修改")]),t._v(" "),a("ul",[a("li",[t._v("撤销本地修改，将文件内容从暂存区复制到工作目录： git checkout -- "),a("file")],1),t._v(" "),a("li",[t._v("撤销暂存区内容，将文件内容从上次提交复制到暂存区：   git reset HEAD "),a("file")],1),t._v(" "),a("li",[t._v("撤销全部改动，将内容从上次提交复制到工作目录：    git checkout HEAD -- "),a("file")],1)]),t._v(" "),a("img",{staticStyle:{zoom:"33%"},attrs:{src:"/Users/sunruonan/Desktop/前端学习/images/IMG_0768.PNG",alt:"IMG_0768"}}),t._v(" "),a("hr"),t._v(" "),a("h5",{attrs:{id:"分支操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分支操作"}},[t._v("#")]),t._v(" 分支操作")]),t._v(" "),a("p",[t._v("tip:")]),t._v(" "),a("ol",[a("li",[t._v("所有提交跟着HEAD走")])]),t._v(" "),a("h6",{attrs:{id:"git-branch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-branch"}},[t._v("#")]),t._v(" git branch")]),t._v(" "),a("p",[t._v("负责分支的增删查改")]),t._v(" "),a("ul",[a("li",[t._v("git branch "),a("branchName",[t._v(" ：创建一个分支")])],1),t._v(" "),a("li",[t._v("git branch  -d "),a("branchName",[t._v("：删除指定分支")])],1),t._v(" "),a("li",[t._v("git branch -v：查看所有分支")])]),t._v(" "),a("h6",{attrs:{id:"git-checkout"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-checkout"}},[t._v("#")]),t._v(" git checkout")]),t._v(" "),a("p",[t._v("通过移动HEAD检出版本，可用于分支切换")]),t._v(" "),a("ul",[a("li",[t._v("git checkout "),a("branchName",[t._v("：HEAD直接指向该分支")])],1),t._v(" "),a("li",[t._v("git checkout -b "),a("branchName",[t._v("：创建并指向该分支")])],1),t._v(" "),a("li",[t._v("git checkout "),a("refrence",[t._v("：")])],1),t._v(" "),a("li",[t._v("git checkout - ：回到上一个分支")])]),t._v(" "),a("h6",{attrs:{id:"git-reset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-reset"}},[t._v("#")]),t._v(" git reset")]),t._v(" "),a("p",[t._v("将当前分支回退到某个历史版本")]),t._v(" "),a("ul",[a("li",[t._v("git reset --mixed "),a("commit",[t._v(" （默认）：保留工作目录，并清空暂存区")])],1),t._v(" "),a("li",[t._v("git reset --soft "),a("commit",[t._v("：保留工作目录，并把重置 HEAD 所带来的新的差异放进暂存区")])],1),t._v(" "),a("li",[t._v("git reset --hard "),a("commit",[t._v("：重置暂存区和工作区，所有add和工作目录的改动都会被清除")])],1)]),t._v(" "),a("p",[t._v("使用捷径(避免hash不直观)：")]),t._v(" "),a("ul",[a("li",[t._v("A^：   A上的前一次提交")]),t._v(" "),a("li",[t._v("A~n：   在A之前的第n次提交")])]),t._v(" "),a("h6",{attrs:{id:"git-reflog"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-reflog"}},[t._v("#")]),t._v(" git reflog")]),t._v(" "),a("p",[t._v("按序排列所有你经过的分支")]),t._v(" "),a("h6",{attrs:{id:"git-stash"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-stash"}},[t._v("#")]),t._v(" git stash")]),t._v(" "),a("p",[t._v("保存目前的工作目录和暂存区状态，并返回到干净的工作区")]),t._v(" "),a("ul",[a("li",[t._v("git stash list ：查看当前的stash栈")]),t._v(" "),a("li",[t._v("git stash save 'xxxx'：通过注释存储stash")]),t._v(" "),a("li",[t._v("git stash apply stash@{n}：应用第n个stash记录")]),t._v(" "),a("li",[t._v("git stash drop stash@{n}：删除第n个stash记录")]),t._v(" "),a("li",[t._v("git stash pop：应用第一个stash记录，并删除该记录")])]),t._v(" "),a("h6",{attrs:{id:"git-merge"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-merge"}},[t._v("#")]),t._v(" git merge "),a("toBranch",[a("formBranch")],1)],1),t._v(" "),a("p",[t._v("合并分支【三方合并】，会生成一个合并记录")]),t._v(" "),a("h6",{attrs:{id:"git-rebase"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-rebase"}},[t._v("#")]),t._v(" git rebase")]),t._v(" "),a("p",[t._v("修剪提交历史基线，将变更commit重演（commit hash值会变），不会生成提交记录，分支为线性的")]),t._v(" "),a("h6",{attrs:{id:"git-tag"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-tag"}},[t._v("#")]),t._v(" git tag "),a("tagName",[a("commitHash")],1)],1),t._v(" "),a("p",[t._v("对某个提交设置一个不变的别名，常在发布后设置，可以通过标签名直接checkout")]),t._v(" "),a("hr"),t._v(" "),a("h5",{attrs:{id:"远程操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#远程操作"}},[t._v("#")]),t._v(" 远程操作")]),t._v(" "),a("h6",{attrs:{id:"git-pull"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-pull"}},[t._v("#")]),t._v(" git pull")]),t._v(" "),a("p",[t._v("从远程仓库拉取到本地，等同于git fetch + git merge")]),t._v(" "),a("h6",{attrs:{id:"git-clone"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-clone"}},[t._v("#")]),t._v(" git clone")]),t._v(" "),a("p",[t._v("克隆远程仓库到本地")]),t._v(" "),a("h6",{attrs:{id:"git-push"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-push"}},[t._v("#")]),t._v(" git push")]),t._v(" "),a("p",[t._v("将本地历史提交到远程分支")]),t._v(" "),a("h6",{attrs:{id:"git-remote"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-remote"}},[t._v("#")]),t._v(" git remote")]),t._v(" "),a("p",[t._v("进行远程仓库配置")]),t._v(" "),a("ul",[a("li",[t._v("git remote -v： 查看所有远程仓库配置")]),t._v(" "),a("li",[t._v("git remote show "),a("remote",[t._v(" 查看某个远程仓库的信息")])],1),t._v(" "),a("li",[t._v("git remote add "),a("shortname",[a("url",[t._v("：添加远程版本库")])],1)],1),t._v(" "),a("li",[t._v("git remote rm name：删除远程仓库")]),t._v(" "),a("li",[t._v("Git remote rename <old_name> <new_name>")])])])}),[],!1,null,null,null);i.default=_.exports}}]);