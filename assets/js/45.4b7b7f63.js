(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{625:function(e,t,v){"use strict";v.r(t);var o=v(9),_=Object(o.a)({},(function(){var e=this,t=e.$createElement,v=e._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h2",{attrs:{id:"文档状态属性"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#文档状态属性"}},[e._v("#")]),e._v(" 文档状态属性")]),e._v(" "),v("h3",{attrs:{id:"document-hidden"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#document-hidden"}},[e._v("#")]),e._v(" document.hidden")]),e._v(" "),v("p",[v("code",[e._v("document.hidden")]),e._v("属性返回一个布尔值，表示当前页面是否可见。如果窗口最小化、浏览器切换了 Tab，都会导致导致页面不可见，使得"),v("code",[e._v("document.hidden")]),e._v("返回"),v("code",[e._v("true")]),e._v("。")]),e._v(" "),v("p",[e._v("这个属性是 Page Visibility API 引入的，一般都是配合这个 API 使用。")]),e._v(" "),v("h3",{attrs:{id:"document-visibilitystate"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#document-visibilitystate"}},[e._v("#")]),e._v(" document.visibilityState")]),e._v(" "),v("p",[v("code",[e._v("document.visibilityState")]),e._v("返回文档的可见状态。")]),e._v(" "),v("p",[e._v("它的值有四种可能。")]),e._v(" "),v("blockquote",[v("ul",[v("li",[v("code",[e._v("visible")]),e._v("：页面可见。注意，页面可能是部分可见，即不是焦点窗口，前面被其他窗口部分挡住了。")]),e._v(" "),v("li",[v("code",[e._v("hidden")]),e._v("：页面不可见，有可能窗口最小化，或者浏览器切换到了另一个 Tab。")]),e._v(" "),v("li",[v("code",[e._v("prerender")]),e._v("：页面处于正在渲染状态，对于用户来说，该页面不可见。")]),e._v(" "),v("li",[v("code",[e._v("unloaded")]),e._v("：页面从内存里面卸载了。")])])]),e._v(" "),v("p",[v("strong",[e._v("这个属性可以用在页面加载时，防止加载某些资源；或者页面不可见时，停掉一些页面功能。")])]),e._v(" "),v("h3",{attrs:{id:"document-readystate"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#document-readystate"}},[e._v("#")]),e._v(" document.readyState")]),e._v(" "),v("p",[v("code",[e._v("document.readyState")]),e._v("属性返回当前文档的状态，共有三种可能的值。")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("loading")]),e._v("：加载 HTML 代码阶段（尚未完成解析）")]),e._v(" "),v("li",[v("code",[e._v("interactive")]),e._v("：加载外部资源阶段")]),e._v(" "),v("li",[v("code",[e._v("complete")]),e._v("：加载完成")])]),e._v(" "),v("p",[e._v("这个属性变化的过程如下。")]),e._v(" "),v("ol",[v("li",[e._v("浏览器开始解析 HTML 文档，"),v("code",[e._v("document.readyState")]),e._v("属性等于"),v("code",[e._v("loading")]),e._v("。")]),e._v(" "),v("li",[e._v("浏览器遇到 HTML 文档中的"),v("code",[e._v("<script>")]),e._v("元素，并且没有"),v("code",[e._v("async")]),e._v("或"),v("code",[e._v("defer")]),e._v("属性，就暂停解析，开始执行脚本，这时"),v("code",[e._v("document.readyState")]),e._v("属性还是等于"),v("code",[e._v("loading")]),e._v("。")]),e._v(" "),v("li",[e._v("HTML 文档解析完成，"),v("code",[e._v("document.readyState")]),e._v("属性变成"),v("code",[e._v("interactive")]),e._v("。")]),e._v(" "),v("li",[e._v("浏览器等待图片、样式表、字体文件等外部资源加载完成，一旦全部加载完成，"),v("code",[e._v("document.readyState")]),e._v("属性变成"),v("code",[e._v("complete")]),e._v("。")])]),e._v(" "),v("h2",{attrs:{id:"document-获取-dom-节点的方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#document-获取-dom-节点的方法"}},[e._v("#")]),e._v(" document 获取 dom 节点的方法")]),e._v(" "),v("h3",{attrs:{id:"document-queryselector-document-queryselectorall"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#document-queryselector-document-queryselectorall"}},[e._v("#")]),e._v(" document.querySelector()，document.querySelectorAll()")]),e._v(" "),v("ul",[v("li",[v("p",[v("code",[e._v("document.querySelector")]),e._v("方法接受一个 CSS 选择器作为参数，返回匹配该选择器的元素节点。如果有多个节点满足匹配条件，则返回第一个匹配的节点。如果没有发现匹配的节点，则返回"),v("code",[e._v("null")]),e._v("。")])]),e._v(" "),v("li",[v("p",[v("code",[e._v("document.querySelectorAll")]),e._v("方法与"),v("code",[e._v("querySelector")]),e._v("用法类似，区别是返回一个"),v("code",[e._v("NodeList")]),e._v("对象，包含所有匹配给定选择器的节点。")])]),e._v(" "),v("li",[v("p",[v("code",[e._v("querySelectorAll")]),e._v("的返回结果不是动态集合，"),v("strong",[e._v("不会实时反映元素节点的变化")]),e._v("。")])])]),e._v(" "),v("blockquote",[v("p",[e._v("这两个方法的参数，可以是逗号分隔的多个 CSS 选择器，返回匹配其中一个选择器的元素节点，这与 CSS 选择器的规则是一致的。")]),e._v(" "),v("p",[e._v("但是，它们不支持 CSS 伪元素的选择器（比如"),v("code",[e._v(":first-line")]),e._v("和"),v("code",[e._v(":first-letter")]),e._v("）和伪类的选择器（比如"),v("code",[e._v(":link")]),e._v("和"),v("code",[e._v(":visited")]),e._v("），即无法选中伪元素和伪类。")])]),e._v(" "),v("h3",{attrs:{id:"document-getelementsbytagname"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#document-getelementsbytagname"}},[e._v("#")]),e._v(" document.getElementsByTagName()")]),e._v(" "),v("p",[v("code",[e._v("document.getElementsByTagName()")]),e._v("方法搜索 HTML 标签名，返回符合条件的元素。它的返回值是一个类似数组对象（"),v("code",[e._v("HTMLCollection")]),e._v("实例），"),v("strong",[e._v("可以实时反映 HTML 文档的变化")]),e._v("。如果没有任何匹配的元素，就返回一个空集。另外，返回结果中，各个成员的顺序就是它们在文档中出现的顺序。")]),e._v(" "),v("h3",{attrs:{id:"document-getelementsbyclassname"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#document-getelementsbyclassname"}},[e._v("#")]),e._v(" document.getElementsByClassName()")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("document.getElementsByClassName()")]),e._v("方法返回一个类似数组的对象（"),v("code",[e._v("HTMLCollection")]),e._v("实例），包括了所有"),v("code",[e._v("class")]),e._v("名字符合指定条件的元素，"),v("strong",[e._v("元素的变化实时反映在返回结果中")]),e._v("。")]),e._v(" "),v("li",[e._v("当参数为多个类名时，返回同时具有这些类名的的元素")])]),e._v(" "),v("h3",{attrs:{id:"document-getelementsbyname"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#document-getelementsbyname"}},[e._v("#")]),e._v(" document.getElementsByName()")]),e._v(" "),v("p",[e._v("用于选择拥有"),v("code",[e._v("name")]),e._v("属性的 HTML 元素（比如"),v("code",[e._v("<form>")]),e._v("、"),v("code",[e._v("<radio>")]),e._v("、"),v("code",[e._v("<img>")]),e._v("、"),v("code",[e._v("<frame>")]),e._v("、"),v("code",[e._v("<embed>")]),e._v("和"),v("code",[e._v("<object>")]),e._v("等），返回一个类似数组的的对象（"),v("code",[e._v("NodeList")]),e._v("实例），因为"),v("code",[e._v("name")]),e._v("属性相同的元素可能不止一个。")]),e._v(" "),v("h3",{attrs:{id:"document-getelementbyid"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#document-getelementbyid"}},[e._v("#")]),e._v(" document.getElementById()")]),e._v(" "),v("p",[e._v("匹配指定"),v("code",[e._v("id")]),e._v("属性的元素节点。如果没有发现匹配的节点，则返回"),v("code",[e._v("null")]),e._v("。")]),e._v(" "),v("blockquote",[v("p",[v("code",[e._v("document.getElementById()")]),e._v("比"),v("code",[e._v("document.querySelector()")]),e._v("效率高得多。")])]),e._v(" "),v("h3",{attrs:{id:"document-elementfrompoint-document-elementsfrompoint"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#document-elementfrompoint-document-elementsfrompoint"}},[e._v("#")]),e._v(" document.elementFromPoint()，document.elementsFromPoint()")]),e._v(" "),v("p",[v("code",[e._v("document.elementFromPoint()")]),e._v("方法返回位于页面指定位置最上层的元素节点。")]),e._v(" "),v("div",{staticClass:"language-js extra-class"},[v("pre",{pre:!0,attrs:{class:"language-js"}},[v("code",[v("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// 选中在(50, 50)这个坐标位置的最上层的那个 HTML 元素。")]),e._v("\n"),v("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" element "),v("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" document"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[e._v("elementFromPoint")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),v("span",{pre:!0,attrs:{class:"token number"}},[e._v("50")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),v("span",{pre:!0,attrs:{class:"token number"}},[e._v("50")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),v("h2",{attrs:{id:"创建-dom-节点的方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#创建-dom-节点的方法"}},[e._v("#")]),e._v(" 创建 dom 节点的方法")]),e._v(" "),v("h3",{attrs:{id:"document-createelement"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#document-createelement"}},[e._v("#")]),e._v(" document.createElement()")]),e._v(" "),v("p",[e._v("用来生成元素节点，并返回该节点。参数为元素的标签名，即元素节点的"),v("code",[e._v("tagName")]),e._v("属性，也可以是自定义的标签名。")]),e._v(" "),v("h3",{attrs:{id:"document-createtextnode"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#document-createtextnode"}},[e._v("#")]),e._v(" document.createTextNode()")]),e._v(" "),v("p",[e._v("用来生成文本节点（"),v("code",[e._v("Text")]),e._v("实例），并返回该节点。它的参数是文本节点的内容。")]),e._v(" "),v("blockquote",[v("p",[e._v("这个方法可以确保返回的节点，被浏览器当作文本渲染，而不是当作 HTML 代码渲染。因此，可以用来展示用户的输入，避免 XSS 攻击。")])]),e._v(" "),v("h3",{attrs:{id:"document-createdocumentfragment"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#document-createdocumentfragment"}},[e._v("#")]),e._v(" document.createDocumentFragment()")]),e._v(" "),v("p",[e._v("生成一个空的文档片段对象")]),e._v(" "),v("blockquote",[v("p",[v("code",[e._v("DocumentFragment")]),e._v("是一个存在于内存的 DOM 片段，不属于当前文档，常常用来生成一段较复杂的 DOM 结构，然后再插入当前文档。这样做的好处在于，因为"),v("code",[e._v("DocumentFragment")]),e._v("不属于当前文档，对它的任何改动，都不会引发网页的重新渲染，比直接修改当前文档的 DOM 有更好的性能表现。")])]),e._v(" "),v("h3",{attrs:{id:"document-createevent"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#document-createevent"}},[e._v("#")]),e._v(" document.createEvent()")]),e._v(" "),v("p",[v("code",[e._v("document.createEvent")]),e._v("方法生成一个事件对象（"),v("code",[e._v("Event")]),e._v("实例），该对象可以被"),v("code",[e._v("element.dispatchEvent")]),e._v("方法使用，触发指定事件。")]),e._v(" "),v("p",[v("code",[e._v("document.createEvent")]),e._v("方法的参数是事件类型，比如"),v("code",[e._v("UIEvents")]),e._v("、"),v("code",[e._v("MouseEvents")]),e._v("、"),v("code",[e._v("MutationEvents")]),e._v("、"),v("code",[e._v("HTMLEvents")]),e._v("。")]),e._v(" "),v("h2",{attrs:{id:"其他方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#其他方法"}},[e._v("#")]),e._v(" 其他方法")]),e._v(" "),v("h3",{attrs:{id:"document-hasfocus"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#document-hasfocus"}},[e._v("#")]),e._v(" document.hasFocus()")]),e._v(" "),v("p",[e._v("返回一个布尔值，表示当前文档之中是否有元素被激活或获得焦点。")]),e._v(" "),v("h3",{attrs:{id:"document-adoptnode-document-importnode"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#document-adoptnode-document-importnode"}},[e._v("#")]),e._v(" document.adoptNode()，document.importNode()")]),e._v(" "),v("p",[v("code",[e._v("document.adoptNode")]),e._v("方法将某个节点及其子节点，从原来所在的文档或"),v("code",[e._v("DocumentFragment")]),e._v("里面移除，归属当前"),v("code",[e._v("document")]),e._v("对象，返回插入后的新节点。插入的节点对象的"),v("code",[e._v("ownerDocument")]),e._v("属性，会变成当前的"),v("code",[e._v("document")]),e._v("对象，而"),v("code",[e._v("parentNode")]),e._v("属性是"),v("code",[e._v("null")]),e._v("。")]),e._v(" "),v("p",[v("code",[e._v("document.importNode")]),e._v("方法则是从原来所在的文档或"),v("code",[e._v("DocumentFragment")]),e._v("里面，拷贝某个节点及其子节点，让它们归属当前"),v("code",[e._v("document")]),e._v("对象。拷贝的节点对象的"),v("code",[e._v("ownerDocument")]),e._v("属性，会变成当前的"),v("code",[e._v("document")]),e._v("对象，而"),v("code",[e._v("parentNode")]),e._v("属性是"),v("code",[e._v("null")]),e._v("。")]),e._v(" "),v("p",[e._v("这两个方法只是改变了节点的归属，这时该节点的父节点是"),v("code",[e._v("null")]),e._v("。下一步还必须将这个节点插入当前文档树。")])])}),[],!1,null,null,null);t.default=_.exports}}]);